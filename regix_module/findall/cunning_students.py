# Нас не проведёшь!
# Условие:
# Очень часто студенты в своих проектах, исследованиях, диссертациях,
# курсовых и дипломных работах заменяют символы кириллицы на другие,
# похожие на символы русского алфавита, пытаясь спрятать следы использованных источников.
#
# Помогите написать регулярное выражение, которое находит все:
#
# Слова, состоящие из кириллических символов, но в них есть как минимум 1 некириллический символ
# Слова, состоящие из некириллических символов, но в них есть как минимум 1 кириллический символ
# Что нужно найти:
# Нужно найти последовательности, подходящие по следующим условиям:
#
# Состоит из кириллических символов, но в ней есть как минимум 1 некириллический символ
# Состоит из некириллических символов, но в ней есть как минимум 1 кириллический символ
# Последовательности, состоящие полностью из кириллических или некириллических символов нужно игнорировать
# Используются буквы верхнего и нижнего регистров
# Знаки препинания не считаются некириллическими символами
# Не может являться подпоследовательностью


import re

test_case = [
    (
        '''О, х0т табc. A что такое табс? Я зашéл нe туда, кyда н4до. 
        Почему это твич не 3абанил - не совсем понятно. Господа, 
        я полагаю стрим надо быстро заканчивать, и удалять...''', 'х0т табc зашéл нe кyда н4до 3абанил'),
    ('Я в шkaфy пpячycь.', 'шkaфy пpячycь'), ('Бpо, тeбe нaд0 тp3нирÖвÆтьçя.', 'Бpо тeбe нaд0 тp3нирÖвÆтьçя'),
    ('Нacтaл0 ßремя бросить 3aгaд0чный взгляд B мек©иканской шляпe и начать план $cаm.',
     'Нacтaл0 ßремя 3aгaд0чный мек©иканской шляпe $cаm')
]

cyr = r'а-яА-ЯёЁ'
non_cyr = fr'[^{cyr}\s]'

pat1 = fr'(?:{non_cyr}+[{cyr}]+)+{non_cyr}*\b'
pat2 = fr'(?:[{cyr}]+{non_cyr}+)+[{cyr}]*\b'

regex = fr'{pat1}|{pat2}'

# v2
pattern = r"(?i)(?:[^а-яё\s]+[а-яё]+)+[^а-яё\s]*\b|(?:[а-яё]+[^а-яё\s]+)+[а-яё]*\b"

for i, (test, answer) in enumerate(test_case, 1):
    result = ' '.join(re.findall(regex, test))
    assert result == answer, f'TEST №{i} - ERROR!\n{result} != {answer}\nError in {test}'
    print(f'TEST №{i} - OK!')
