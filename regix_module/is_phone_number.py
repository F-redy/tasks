# Это точно номер?
# Условие:
# Очень часто номера телефонов вводят по-разному. Иногда ставят скобки, иногда тире, иногда пробелы,
# иногда вообще ничего не ставят. Напишите регулярное выражение, которое найдёт все такие номера.
#
# Что нужно сделать:
# Найдите все последовательности, которые могут быть номерами телефонов:
#
# Номер может начинаться с +
# Потом идут цифры
# В каждом номере минимум 11 цифр
# Между цифрами могут быть разделители: ( )-
# Длина разделителя от 0 до 2 символов включительно
# Тестовые данные:
# Входные данные:
# На вход программе подаётся 1 строка.
#
# Выходные данные:
# Если это номер телефона - выводите True, иначе - False.
import re

test_case = [('3(097)8179710', True), ('+30936655917', True), ('89175643308', True), ('+3 067 7993132', True),
             ('8 (099) 007-62-31', True), ('8 063 353 12 49', True), ('+3 099 789-33-08', True), ('30972136208', True),
             ('+380 93 512 92 14', True), ('3[096]8179710', False), ('3(095)817_97_10', False), ('+307366559', False),
             ('+3 063 79938', False), ('8 (066) -007-62-31', False), ('-8 (067 35312 49', False),
             ('8 097 789f33-08', False), ('8 093 674 85 5', False)]


def is_number_phone(number: str) -> bool:
    pattern = r"^\+?(?:\d[() -]{0,2}){11,}"
    return bool(re.fullmatch(pattern, number))


for i, (test, result) in enumerate(test_case, 1):
    res = is_number_phone(test)
    assert res == result, f"TEST №{i}: ERROR in {test}\n{res} != {result}"
    print(f'TEST №{i}: OK')
